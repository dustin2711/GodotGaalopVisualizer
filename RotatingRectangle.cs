using System;

public static class RotatingRectangle
{
	public static void Execute(float TIME, float[] p5, float[] p6, float[] p7, float[] p8)
	{
		float[] M = new float[8];
		M[0] = MathF.Cos(TIME / 2.0f); // 1.0
		M[6] = MathF.Sin(TIME / 2.0f); // e1 ^ e2
		p5[0] = (-M[6]) * M[0] + (-(M[0] * (-M[6]))); // 1.0
		p5[4] = (M[0] + (-M[6])) * M[0] + (-(((-M[0]) + (-M[6])) * (-M[6]))); // e0 ^ e1
		p5[5] = (M[0] + (-M[6])) * (-M[6]) + ((-M[0]) + (-M[6])) * M[0]; // e0 ^ e2
		p5[6] = (-M[6]) * (-M[6]) + M[0] * M[0]; // e1 ^ e2
		p6[0] = (-M[6]) * M[0] + (-(M[0] * (-M[6]))); // 1.0
		p6[4] = ((-M[0]) + (-M[6])) * M[0] + (-(((-M[0]) + M[6]) * (-M[6]))); // e0 ^ e1
		p6[5] = ((-M[0]) + (-M[6])) * (-M[6]) + ((-M[0]) + M[6]) * M[0]; // e0 ^ e2
		p6[6] = (-M[6]) * (-M[6]) + M[0] * M[0]; // e1 ^ e2
		p7[0] = (-M[6]) * M[0] + (-(M[0] * (-M[6]))); // 1.0
		p7[4] = ((-M[0]) + M[6]) * M[0] + (-((M[0] + M[6]) * (-M[6]))); // e0 ^ e1
		p7[5] = ((-M[0]) + M[6]) * (-M[6]) + (M[0] + M[6]) * M[0]; // e0 ^ e2
		p7[6] = (-M[6]) * (-M[6]) + M[0] * M[0]; // e1 ^ e2
		p8[0] = (-M[6]) * M[0] + (-(M[0] * (-M[6]))); // 1.0
		p8[4] = (M[0] + M[6]) * M[0] + (-((M[0] + (-M[6])) * (-M[6]))); // e0 ^ e1
		p8[5] = (M[0] + M[6]) * (-M[6]) + (M[0] + (-M[6])) * M[0]; // e0 ^ e2
		p8[6] = (-M[6]) * (-M[6]) + M[0] * M[0]; // e1 ^ e2
	}
}
